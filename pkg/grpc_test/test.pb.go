// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: pkg/runner/grpc_test/test.proto

package grpc_test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{0}
}

type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgID     int32 `protobuf:"varint,1,opt,name=MsgID,proto3" json:"MsgID,omitempty"`
	ExpectLen int32 `protobuf:"varint,2,opt,name=ExpectLen,proto3" json:"ExpectLen,omitempty"`
}

func (x *StreamMessage) Reset() {
	*x = StreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessage) ProtoMessage() {}

func (x *StreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessage.ProtoReflect.Descriptor instead.
func (*StreamMessage) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{2}
}

func (x *StreamMessage) GetMsgID() int32 {
	if x != nil {
		return x.MsgID
	}
	return 0
}

func (x *StreamMessage) GetExpectLen() int32 {
	if x != nil {
		return x.ExpectLen
	}
	return 0
}

type StreamMessageRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*StreamMessage `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *StreamMessageRepeated) Reset() {
	*x = StreamMessageRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRepeated) ProtoMessage() {}

func (x *StreamMessageRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRepeated.ProtoReflect.Descriptor instead.
func (*StreamMessageRepeated) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{3}
}

func (x *StreamMessageRepeated) GetData() []*StreamMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type BasicType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int32   int32   `protobuf:"varint,1,opt,name=Int32,proto3" json:"Int32,omitempty"`
	Int64   int64   `protobuf:"varint,2,opt,name=Int64,proto3" json:"Int64,omitempty"`
	Uint32  uint32  `protobuf:"varint,3,opt,name=Uint32,proto3" json:"Uint32,omitempty"`
	Uint64  uint64  `protobuf:"varint,4,opt,name=Uint64,proto3" json:"Uint64,omitempty"`
	Float32 float32 `protobuf:"fixed32,5,opt,name=Float32,proto3" json:"Float32,omitempty"`
	Float64 float64 `protobuf:"fixed64,6,opt,name=Float64,proto3" json:"Float64,omitempty"`
	String_ string  `protobuf:"bytes,7,opt,name=String,proto3" json:"String,omitempty"`
	Bool    bool    `protobuf:"varint,8,opt,name=Bool,proto3" json:"Bool,omitempty"`
}

func (x *BasicType) Reset() {
	*x = BasicType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicType) ProtoMessage() {}

func (x *BasicType) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicType.ProtoReflect.Descriptor instead.
func (*BasicType) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{4}
}

func (x *BasicType) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *BasicType) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *BasicType) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *BasicType) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *BasicType) GetFloat32() float32 {
	if x != nil {
		return x.Float32
	}
	return 0
}

func (x *BasicType) GetFloat64() float64 {
	if x != nil {
		return x.Float64
	}
	return 0
}

func (x *BasicType) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *BasicType) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

type AdvancedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int32Array    []int32                `protobuf:"varint,1,rep,packed,name=Int32Array,proto3" json:"Int32Array,omitempty"`
	Int64Array    []int64                `protobuf:"varint,2,rep,packed,name=Int64Array,proto3" json:"Int64Array,omitempty"`
	Uint32Array   []uint32               `protobuf:"varint,3,rep,packed,name=Uint32Array,proto3" json:"Uint32Array,omitempty"`
	Uint64Array   []uint64               `protobuf:"varint,4,rep,packed,name=Uint64Array,proto3" json:"Uint64Array,omitempty"`
	Float32Array  []float32              `protobuf:"fixed32,5,rep,packed,name=Float32Array,proto3" json:"Float32Array,omitempty"`
	Float64Array  []float64              `protobuf:"fixed64,6,rep,packed,name=Float64Array,proto3" json:"Float64Array,omitempty"`
	StringArray   []string               `protobuf:"bytes,7,rep,name=StringArray,proto3" json:"StringArray,omitempty"`
	BoolArray     []bool                 `protobuf:"varint,8,rep,packed,name=BoolArray,proto3" json:"BoolArray,omitempty"`
	HelloReplyMap map[string]*HelloReply `protobuf:"bytes,9,rep,name=HelloReplyMap,proto3" json:"HelloReplyMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AdvancedType) Reset() {
	*x = AdvancedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvancedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedType) ProtoMessage() {}

func (x *AdvancedType) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_grpc_test_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedType.ProtoReflect.Descriptor instead.
func (*AdvancedType) Descriptor() ([]byte, []int) {
	return file_pkg_runner_grpc_test_test_proto_rawDescGZIP(), []int{5}
}

func (x *AdvancedType) GetInt32Array() []int32 {
	if x != nil {
		return x.Int32Array
	}
	return nil
}

func (x *AdvancedType) GetInt64Array() []int64 {
	if x != nil {
		return x.Int64Array
	}
	return nil
}

func (x *AdvancedType) GetUint32Array() []uint32 {
	if x != nil {
		return x.Uint32Array
	}
	return nil
}

func (x *AdvancedType) GetUint64Array() []uint64 {
	if x != nil {
		return x.Uint64Array
	}
	return nil
}

func (x *AdvancedType) GetFloat32Array() []float32 {
	if x != nil {
		return x.Float32Array
	}
	return nil
}

func (x *AdvancedType) GetFloat64Array() []float64 {
	if x != nil {
		return x.Float64Array
	}
	return nil
}

func (x *AdvancedType) GetStringArray() []string {
	if x != nil {
		return x.StringArray
	}
	return nil
}

func (x *AdvancedType) GetBoolArray() []bool {
	if x != nil {
		return x.BoolArray
	}
	return nil
}

func (x *AdvancedType) GetHelloReplyMap() map[string]*HelloReply {
	if x != nil {
		return x.HelloReplyMap
	}
	return nil
}

var File_pkg_runner_grpc_test_test_proto protoreflect.FileDescriptor

var file_pkg_runner_grpc_test_test_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x4c, 0x65,
	0x6e, 0x22, 0x44, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x42, 0x6f, 0x6f,
	0x6c, 0x22, 0xc3, 0x03, 0x0a, 0x0c, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33,
	0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x0c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x4f,
	0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70, 0x1a,
	0x56, 0x0a, 0x12, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x90, 0x03, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e,
	0x12, 0x2e, 0x0a, 0x05, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x28, 0x01, 0x12, 0x4a, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x17, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x41, 0x0a, 0x09, 0x42, 0x69, 0x64, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x17,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x39, 0x0a, 0x0d, 0x54,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x73, 0x75,
	0x72, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_runner_grpc_test_test_proto_rawDescOnce sync.Once
	file_pkg_runner_grpc_test_test_proto_rawDescData = file_pkg_runner_grpc_test_test_proto_rawDesc
)

func file_pkg_runner_grpc_test_test_proto_rawDescGZIP() []byte {
	file_pkg_runner_grpc_test_test_proto_rawDescOnce.Do(func() {
		file_pkg_runner_grpc_test_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_runner_grpc_test_test_proto_rawDescData)
	})
	return file_pkg_runner_grpc_test_test_proto_rawDescData
}

var file_pkg_runner_grpc_test_test_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_runner_grpc_test_test_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: grpctest.Empty
	(*HelloReply)(nil),            // 1: grpctest.HelloReply
	(*StreamMessage)(nil),         // 2: grpctest.StreamMessage
	(*StreamMessageRepeated)(nil), // 3: grpctest.StreamMessageRepeated
	(*BasicType)(nil),             // 4: grpctest.BasicType
	(*AdvancedType)(nil),          // 5: grpctest.AdvancedType
	nil,                           // 6: grpctest.AdvancedType.HelloReplyMapEntry
}
var file_pkg_runner_grpc_test_test_proto_depIdxs = []int32{
	2, // 0: grpctest.StreamMessageRepeated.data:type_name -> grpctest.StreamMessage
	6, // 1: grpctest.AdvancedType.HelloReplyMap:type_name -> grpctest.AdvancedType.HelloReplyMapEntry
	1, // 2: grpctest.AdvancedType.HelloReplyMapEntry.value:type_name -> grpctest.HelloReply
	0, // 3: grpctest.Main.Unary:input_type -> grpctest.Empty
	2, // 4: grpctest.Main.ClientStream:input_type -> grpctest.StreamMessage
	3, // 5: grpctest.Main.ServerStream:input_type -> grpctest.StreamMessageRepeated
	2, // 6: grpctest.Main.BidStream:input_type -> grpctest.StreamMessage
	4, // 7: grpctest.Main.TestBasicType:input_type -> grpctest.BasicType
	5, // 8: grpctest.Main.TestAdvancedType:input_type -> grpctest.AdvancedType
	1, // 9: grpctest.Main.Unary:output_type -> grpctest.HelloReply
	3, // 10: grpctest.Main.ClientStream:output_type -> grpctest.StreamMessageRepeated
	2, // 11: grpctest.Main.ServerStream:output_type -> grpctest.StreamMessage
	2, // 12: grpctest.Main.BidStream:output_type -> grpctest.StreamMessage
	4, // 13: grpctest.Main.TestBasicType:output_type -> grpctest.BasicType
	5, // 14: grpctest.Main.TestAdvancedType:output_type -> grpctest.AdvancedType
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_runner_grpc_test_test_proto_init() }
func file_pkg_runner_grpc_test_test_proto_init() {
	if File_pkg_runner_grpc_test_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_runner_grpc_test_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_runner_grpc_test_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_runner_grpc_test_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_runner_grpc_test_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_runner_grpc_test_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_runner_grpc_test_test_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvancedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_runner_grpc_test_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_runner_grpc_test_test_proto_goTypes,
		DependencyIndexes: file_pkg_runner_grpc_test_test_proto_depIdxs,
		MessageInfos:      file_pkg_runner_grpc_test_test_proto_msgTypes,
	}.Build()
	File_pkg_runner_grpc_test_test_proto = out.File
	file_pkg_runner_grpc_test_test_proto_rawDesc = nil
	file_pkg_runner_grpc_test_test_proto_goTypes = nil
	file_pkg_runner_grpc_test_test_proto_depIdxs = nil
}
